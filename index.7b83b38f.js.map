{"mappings":"6LAIO,SAASA,EAAiBC,GAC/B,OAAOC,MAAM,kGAA+CD,KACzDE,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,IAEvBL,MAAKM,GAAQC,EAAiBD,I,CCV5B,IAAIE,EAAa,GACjB,SAASC,ICFPV,MACL,yGACAC,MAAKC,IACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAG3B,OAAOH,EAASI,MAAM,IDDrBL,MAAKU,IACJF,EAAaE,EAAQC,MAAM,IAE5BC,OAAMC,GAASC,QAAQC,IAAIF,KAE9BhB,EARW,E,CEFN,SAASmB,EAAaC,GAC3B,IAAIC,EAAY,GAUhB,OARAD,EAAUE,SAAQC,IAChBF,EAAUG,KAAKb,EAAWc,MAAKC,GAASA,EAAMC,KAAOJ,IAAUK,KAAK,IAGlEP,EAAUQ,OAAS,IACrBR,EAAYA,EAAUS,MAAM,EAAG,GAC/BT,EAAUG,KAAK,UAEVH,C,CCXF,SAASU,EAAiBC,GAC/B,OAAOA,EACJC,KAAI,EAACC,eAAEA,EAAcC,aAAEA,EAAYf,UAAEA,EAASgB,YAAEA,MAC/C,IAAItB,EAASK,EAAaC,GAE1BN,EAASA,EAAOuB,KAAK,MAIrB,MAAO,8MAIwCD,4KAOvCF,0FAGApB,OAhBK,IAAIwB,KAAKH,GACGI,mEAmBpB,IAENF,KAAK,G,CC9BV,MAAMG,EAAYC,SAASC,cAAc,kBAClC,SAAShC,EAAiBD,GAC/B,MAAMkC,EAAYZ,EAAiBtB,EAAKmC,SACxCJ,EAAUK,mBAAmB,YAAaF,E,CCF7BF,SAASC,cAAc,QCAtC,MAAMI,EAAUL,SAASC,cAAc,U,+HCFvC,MAAMK,EAAYN,SAASC,cAAc,aAEnCM,GADaP,SAASC,cAAc,SACxBD,SAASC,cAAc,kBACnCO,EAAOR,SAASC,cAAc,QAClBD,SAASC,cAAc,gBAIzC,SAASQ,EAAcC,GACnBJ,EAAWK,UAAUC,IAAI,Y,CAG7B,SAASC,EAAsBH,GAC1BA,EAAEI,SAASJ,EAAEK,eACfT,EAAWK,UAAUC,IAAI,Y,CAI5B,SAASI,EAAYC,GACjBA,EAAEC,iBACFZ,EAAWK,UAAUQ,OAAO,aAE5BX,EAAOY,iBAAiB,WAE5B,SAASC,EAAmBX,GACX,WAAXA,EAAEY,OACLhB,EAAWK,UAAUC,IAAI,aACzBJ,EAAOe,oBAAoB,UAAWF,G,IAKlC,SAASG,EAAQC,GACtBA,EAAIL,iBAAiB,QAASJ,GAC9BT,EAAYa,iBAAiB,QAASX,GACtCH,EAAWc,iBAAiB,QAASP,E,iBC9BvC,MAAMa,EAAe1B,SAASC,cAAc,SAG1C9B,IACAqD,EAAQE,GFJDrB,EAAQD,mBAAmB,YGJzB","sources":["src/js/requests/fetchFilmsTrends.js","src/js/controls/trendsControl.js","src/js/requests/fetchGenreId.js","src/js/customFunction/getGenreName.js","src/js/markup/trendfilmsMarkup.js","src/js/render/filmsTrendRender.js","src/js/render/testRender.js","src/js/render/renderBtnModalFilm.js","src/js/modal/commonModalOpen.js","src/js/common.js","src/js/markup/markupBtnModalFilm.js"],"sourcesContent":["import { filmsTrendRender } from '../render/filmsTrendRender';\nconst BASEURL = 'https://api.themoviedb.org/3/trending/';\nconst keyApi = '894ef72300682f1db325dae2afe3e7e2';\n\nexport function fetchFilmsTrends(page) {\n  return fetch(`${BASEURL}movie/week?api_key=${keyApi}&page=${page}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(data => filmsTrendRender(data));\n}\n","import { fetchFilmsTrends } from '../requests';\nimport { fetchGenreId } from '../requests';\nexport let genreIdArr = [];\nexport function trendsControls() {\n  let page = 1;\n\n  fetchGenreId()\n    .then(genreId => {\n      genreIdArr = genreId.genres;\n    })\n    .catch(error => console.log(error));\n\n  fetchFilmsTrends(page);\n}\n","export function fetchGenreId() {\n  return fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=894ef72300682f1db325dae2afe3e7e2&language=en-US'\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n}\n","import { genreIdArr } from '../controls/trendsControl';\n\nexport function getGenreName(genre_ids) {\n  let genreName = [];\n\n  genre_ids.forEach(genre_id => {\n    genreName.push(genreIdArr.find(genre => genre.id === genre_id).name);\n  });\n\n  if (genreName.length > 2) {\n    genreName = genreName.slice(0, 2);\n    genreName.push('Other');\n  }\n  return genreName;\n}\n","import { getGenreName } from '../customFunction/getGenreName';\n\nexport function createFilmMarkup(arrFilms) {\n  return arrFilms\n    .map(({ original_title, release_date, genre_ids, poster_path }) => {\n      let genres = getGenreName(genre_ids);\n\n      genres = genres.join(', ');\n\n      const date = new Date(release_date);\n      const yearRelease = date.getFullYear();\n      return `<div class=\"film-card\">\n      <div class=\"film-card__img-box\">\n        <a class=\"film-card__link link\" href=\"\">\n        <img class=\"film-card__img\"\n          src=\"https://www.themoviedb.org/t/p/w500/${poster_path}\"\n          alt=\"\"\n        />\n        </a></div>\n      \n        <div class=\"film-card__info\">\n          <h2 class=\"film-card__name film-card__item\">\n            ${original_title}\n          </h2>\n          <p class=\"film-card__data film-card__item\">\n            ${genres} | ${yearRelease}\n          </p>\n        </div>\n      \n    </div>`;\n    })\n    .join('');\n}\n","import { createFilmMarkup } from '../markup/trendfilmsMarkup';\nconst galleryEl = document.querySelector('.films-gallery');\nexport function filmsTrendRender(data) {\n  const imgMarkUp = createFilmMarkup(data.results);\n  galleryEl.insertAdjacentHTML('beforeend', imgMarkUp);\n}\n","import { markupTrending } from '../markup';\n\nconst mainEl = document.querySelector('main');\n\nexport function testRender(data) {\n  return data.results.map(item =>\n    mainEl.insertAdjacentHTML('beforeend', markupTrending(item.poster_path))\n  );\n}\n","import { markupBtnModalFilm } from '../markup';\n\nconst modalEl = document.querySelector('.modal');\n\nexport function renderBtnModalFilm(data) {\n  return modalEl.insertAdjacentHTML('beforeend', markupBtnModalFilm());\n}\n","const backdropEl =document.querySelector(\".backdrop\")\nconst buttonTestEl=document.querySelector(\".test\")\nconst buttonClose=document.querySelector(\".modal-button\")\nconst bodyEl=document.querySelector(\"body\")\nconst footerBtn = document.querySelector(\".footer__btn\")\n\n\n\nfunction onClouseModal(e) {\n    backdropEl.classList.add(\"is-hidden\")\n  }\n\nfunction onClouseModalBackdrop(e) {\n  if(e.target===e.currentTarget)\n  {backdropEl.classList.add(\"is-hidden\")}\n  return\n  } \n\nfunction onOpenModal(e) {\n    e.preventDefault();\n    backdropEl.classList.remove(\"is-hidden\")\n\n    bodyEl.addEventListener('keydown', creatKeydownEscape);\n\nfunction creatKeydownEscape(e) {\n  if (e.code === \"Escape\") {\n   backdropEl.classList.add(\"is-hidden\")\n   bodyEl.removeEventListener('keydown', creatKeydownEscape);\n  }\n}\n}\n\nexport function onClick(btn) {\n  btn.addEventListener('click', onOpenModal)\n  buttonClose.addEventListener('click', onClouseModal)\n  backdropEl.addEventListener(\"click\", onClouseModalBackdrop)\n  \n}","// import { fetchTrending } from './requests';\nimport { renderBtnModalFilm } from './render';\nimport { onClick } from './modal';\nimport { trendsControls } from './controls';\n\nconst buttonTestEl = document.querySelector('.test');\nexport function renderAll() {\n  // fetchTrending();\n  trendsControls();\n  onClick(buttonTestEl);\n  renderBtnModalFilm();\n}\n","export function markupBtnModalFilm() {\n    return `<button class=\"button\">add to Watched</button>\n    <button class=\"button\">add to queue</button>`;\n  }"],"names":["$801e7836fea51ee6$export$25311eb0e0625687","page","fetch","then","response","ok","Error","status","json","data","$0ff80bc424f467fe$export$e034e57e3a7a732f","$25176f203a4c7d2e$export$88c94c87660d44ec","$25176f203a4c7d2e$export$35de0e194fa031c","genreId","genres","catch","error","console","log","$708087666b1a495c$export$e1e489d92e562b7b","genre_ids","genreName","forEach","genre_id","push","find","genre","id","name","length","slice","$19aedebb0ec4ed46$export$34f980816dd5ca83","arrFilms","map","original_title","release_date","poster_path","join","Date","getFullYear","$0ff80bc424f467fe$var$galleryEl","document","querySelector","imgMarkUp","results","insertAdjacentHTML","$c5a793067e7ef1fd$var$modalEl","$008b226b4f7cc992$var$backdropEl","$008b226b4f7cc992$var$buttonClose","$008b226b4f7cc992$var$bodyEl","$008b226b4f7cc992$var$onClouseModal","e","classList","add","$008b226b4f7cc992$var$onClouseModalBackdrop","target","currentTarget","$008b226b4f7cc992$var$onOpenModal","e1","preventDefault","remove","addEventListener","creatKeydownEscape","code","removeEventListener","$008b226b4f7cc992$export$1d5a917feb871989","btn","$592bd68fa75d60bf$var$buttonTestEl"],"version":3,"file":"index.7b83b38f.js.map"}