{"mappings":"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","sources":["src/js/requests/fetchFilmsTrends.js","src/js/render/filmsTrendRender.js","src/js/markup/trendfilmsMarkup.js","src/js/controls/trendsControl.js","src/js/requests/fetchGenreId.js","src/js/customFunction/getGenreName.js","src/js/modal/markupFilmForodal.js","src/js/modal/fetchFilmId.js","src/js/markup/markupBtnModalFilm.js","src/js/modal/commonModalOpen.js","src/js/common.js","src/index.js"],"sourcesContent":["const BASEURL = 'https://api.themoviedb.org/3/trending/';\nconst keyApi = '894ef72300682f1db325dae2afe3e7e2';\n\nexport function fetchFilmsTrends(page, urlPart) {\n  return fetch(`${BASEURL}${urlPart}?api_key=${keyApi}&page=${page}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n","import { createFilmMarkup } from '../markup/trendfilmsMarkup';\n//const galleryEl = document.querySelector('.films-gallery');\nexport function filmsTrendRender(data, destinationEl) {\n  const imgMarkUp = createFilmMarkup(data.results);\n  destinationEl.insertAdjacentHTML('beforeend', imgMarkUp);\n}\n","import { getGenreName } from '../customFunction/getGenreName';\n\nexport function createFilmMarkup(arrFilms) {\n  return arrFilms\n    .map(({ original_title, release_date, genre_ids, poster_path, id }) => {\n      let genres = getGenreName(genre_ids);\n\n      if (genres.length > 2) {\n        genres = genres.slice(0, 2);\n        genres.push('Other');\n      }\n      genres = genres.join(', ');\n\n      const date = new Date(release_date);\n      const yearRelease = date.getFullYear();\n      return `<div class=\"film-card\">\n      <div class=\"film-card__img-box\">\n        <a class=\"film-card__link link\" href=\"\">\n        <img class=\"film-card__img\"\n          src=\"https://www.themoviedb.org/t/p/w500/${poster_path}\"\n          alt=\"\"\n          id=\"${id}\"\n        />\n        </a></div>\n      \n        <div class=\"film-card__info\">\n          <h2 class=\"film-card__name film-card__item\">\n            ${original_title}\n          </h2>\n          <p class=\"film-card__data film-card__item\">\n            ${genres} | ${yearRelease}\n          </p>\n        </div>\n      \n    </div>`;\n    })\n    .join('');\n}\n","import { fetchFilmsTrends } from '../requests';\nimport { fetchGenreId } from '../requests';\nimport { filmsTrendRender } from '../render/filmsTrendRender';\nexport let genreIdArr = [];\nexport function trendsControls() {\n  let page = 1;\n\n  fetchGenreId()\n    .then(genreId => {\n      genreIdArr = genreId.genres;\n    })\n    .catch(error => console.log(error));\n  const uplPart = 'movie/week';\n  fetchFilmsTrends(page, uplPart).then(data => {\n    const destinationEl = document.querySelector('.films-gallery');\n    filmsTrendRender(data, destinationEl);\n  });\n} //это святое\n","export function fetchGenreId() {\n  return fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=894ef72300682f1db325dae2afe3e7e2&language=en-US'\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n}\n","import { genreIdArr } from '../controls/trendsControl';\n\nexport function getGenreName(genre_ids) {\n  let genreName = [];\n\n  genre_ids.forEach(genre_id => {\n    genreName.push(genreIdArr.find(genre => genre.id === genre_id).name);\n  });\n\n  if (genreName.length > 2) {\n    genreName = genreName.slice(0, 2);\n    genreName.push('Other');\n  }\n  return genreName;\n}\n","import { fetchFilmId } from './fetchFilmId';\nimport { markupBtnModalFilm } from '../markup';\n\nlet film = {};\nconst modalCardEl = document.querySelector('.modal-card');\n\nexport async function FetchFilmId(id) {\n  await fetchFilmId(id).then(respons => {\n    film = respons;\n    return film;\n  });\n\n  console.log('return', film);\n\n  const marcup = markupBtnModalFilm(film);\n  return (modalCardEl.innerHTML = marcup);\n}\n\nexport function clianFilmCard() {\n  return (modalCardEl.innerHTML = '');\n}\n","const KEY = '45074c10b8f2ea3914a60876b2d17a1a';\nconst BASEURL = 'https://api.themoviedb.org/3/';\n\n\nexport function fetchFilmId(movie_id) {\n    const arrFilms = fetch(`${BASEURL}/movie/${movie_id}?api_key=${KEY}`)\nreturn arrFilms.then( response=> {\nif(!response.ok){\n    throw new Error(response.status)\n}\nconsole.log(response);\nreturn response.json();\n})\n}\n\n","import { FetchFilmId } from '../markup';\n\nexport function markupBtnModalFilm(film) {\n  return `<img class=\"modal-card__img\"\n     src=\"https://www.themoviedb.org/t/p/w500/${film.poster_path}\"\n     alt=\"\"\n     id=\"\"\n    />\n    <div class=\"modal-card__info\">\n     <h2>${film.title}</h2>\n     <ul>\n       <li class=\"list\">Vote/Votes <div><span>${film.vote_average}</span>/<span>${film.vote_count}</span></div></li>\n       <li class=\"list\">Popularity <span>${film.popularity}</span></li>\n       <li class=\"list\">Original Title <span>${film.original_title}</span></li>\n     </ul>\n     <p>\n       <h3>About</h3>\n       <div>${film.overview}</div>\n     </p>\n     <button class=\"button\">add to Watched</button>\n     <button class=\"button\">add to queue</button>\n      </div>`;\n}\n","// import { testOnClickFetchFilmId } from '../modal'\nimport { FetchFilmId } from '../modal';\nimport { clianFilmCard } from './markupFilmForodal';\n\nconst backdropEl = document.querySelector('.backdrop');\nconst buttonTestEl = document.querySelector('.test');\nconst buttonClose = document.querySelector('.modal__button');\nconst bodyEl = document.querySelector('body');\nconst mainEl = document.querySelector('main');\nlet filmCardLink = 0;\nlet filmCardLinkId = 0;\n\nfunction onClouseModal(e) {\n  backdropEl.classList.add('is-hidden');\n  clianFilmCard();\n}\n\nfunction onClouseModalBackdrop(e) {\n  if (e.target === e.currentTarget) {\n    backdropEl.classList.add('is-hidden');\n  }\n  return;\n}\n\nfunction onOpenModal(e) {\n  // e.preventDefault();\n  backdropEl.classList.remove('is-hidden');\n  bodyEl.addEventListener('keydown', creatKeydownEscape);\n\n  function creatKeydownEscape(e) {\n    if (e.code === 'Escape') {\n      backdropEl.classList.add('is-hidden');\n      bodyEl.removeEventListener('keydown', creatKeydownEscape);\n    }\n  }\n}\n\nfunction onEventListenerClick(e) {\n  e.preventDefault();\n  filmCardLink = e.target;\n  filmCardLinkId = e.target.id;\n\n  FetchFilmId(filmCardLinkId);\n  onOpenModal(filmCardLink);\n}\n\nexport function onClick(btn) {\n  btn.addEventListener('click', onOpenModal);\n  buttonClose.addEventListener('click', onClouseModal);\n  backdropEl.addEventListener('click', onClouseModalBackdrop);\n}\n\nexport function onOpenModalFilm(e) {\n  mainEl.addEventListener('click', onEventListenerClick);\n  buttonClose.addEventListener('click', onClouseModal);\n  backdropEl.addEventListener('click', onClouseModalBackdrop);\n}\n","// import { fetchTrending } from './requests';\nimport { onClick } from './modal';\nimport { trendsControls } from './controls';\nimport { trendfilmsMarkup } from \"./markup\";\nimport { onOpenModalFilm } from \"./modal\";\n\n\n// const buttonTestEl = document.querySelector('.test');\n\n\nexport function renderAll() {\n   // fetchTrending();\n  trendsControls();\n  onOpenModalFilm();\n  // onClick(buttonTestEl);\n}\n\n","import { renderAll } from './js/common.js';\n\nrenderAll();\n\nconst btnWatchedEl = document.querySelector('.header-btn__watched');\nconsole.log(btnWatchedEl);\n"],"names":["$801e7836fea51ee6$export$25311eb0e0625687","page","urlPart","fetch","then","response","ok","Error","status","json","$0ff80bc424f467fe$export$e034e57e3a7a732f","data","destinationEl","imgMarkUp","results","map","original_title","release_date","genre_ids","poster_path","id","genres","$708087666b1a495c$export$e1e489d92e562b7b","length","slice","push","join","date","Date","yearRelease","getFullYear","insertAdjacentHTML","$25176f203a4c7d2e$export$88c94c87660d44ec","$25176f203a4c7d2e$export$35de0e194fa031c","genreId","catch","error","console","log","document","querySelector","genreName","forEach","genre_id","find","genre","name","$61c079253e998c44$var$film","$61c079253e998c44$var$modalCardEl","async","$61c079253e998c44$export$eb977ef7ffa021ce","movie_id","respons","marcup","film","title","vote_average","vote_count","popularity","overview","innerHTML","$008b226b4f7cc992$var$backdropEl","$008b226b4f7cc992$var$buttonClose","$008b226b4f7cc992$var$bodyEl","$008b226b4f7cc992$var$mainEl","$008b226b4f7cc992$var$filmCardLink","$008b226b4f7cc992$var$filmCardLinkId","$008b226b4f7cc992$var$onClouseModal","e","classList","add","$008b226b4f7cc992$var$onClouseModalBackdrop","target","currentTarget","$008b226b4f7cc992$var$onOpenModal","e1","remove","addEventListener","creatKeydownEscape","code","removeEventListener","$008b226b4f7cc992$var$onEventListenerClick","preventDefault","$1f0dc3b9307be026$var$btnWatchedEl"],"version":3,"file":"index.6afcc345.js.map"}