{"mappings":"yMAGO,SAASA,EAAiBC,EAAMC,GACrC,OAAOC,MAAM,GAAaC,OAJZ,0CAI+BA,OAAnBF,EAAQ,aAA0BE,OAH/C,mCAGuC,UAAaA,OAALH,IAAQI,MAClE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,M,ICNf,IAAIC,EAAa,GACjB,SAASC,ICHPT,MACL,yGACAE,MAAK,SAAAC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAG3B,OAAOH,EAASI,M,IDAfL,MAAK,SAAAQ,GACJF,EAAaE,EAAQC,M,IAEtBC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E,IAE9BhB,EARW,EAOK,cACgBK,MAAK,SAAAc,GAEnCC,EAAiBD,EADKE,SAASC,cAAc,kB,IEZ1C,SAASC,EAAaC,GAC3B,IAAIC,EAAY,GAUhB,OARAD,EAAUE,SAAQ,SAAAC,GAChBF,EAAUG,KAAKjB,EAAWkB,MAAK,SAAAC,G,OAASA,EAAMC,KAAOJ,C,IAAUK,K,IAG7DP,EAAUQ,OAAS,IACrBR,EAAYA,EAAUS,MAAM,EAAG,IACrBN,KAAK,SAEVH,C,CCXF,SAASU,EAAiBC,GAC/B,OAAOA,EACJC,KAAI,SAAAC,G,IAAGC,EAAcD,EAAdC,eAAgBC,EAAYF,EAAZE,aAAchB,EAASc,EAATd,UAAWiB,EAAWH,EAAXG,YAC3C3B,EAASS,EAAaC,GAEtBV,EAAOmB,OAAS,IAClBnB,EAASA,EAAOoB,MAAM,EAAG,IAClBN,KAAK,SAEdd,EAASA,EAAO4B,KAAK,MAErB,IACMC,EADO,IAAIC,KAAKJ,GACGK,cACzB,MAAO,8MAWCzC,OAPuCqC,EAAY,4KAUnDrC,OAHAmC,EAAe,0FAGHnC,OAAZU,EAAO,OAAiBV,OAAZuC,EAAY,uD,IAMjCD,KAAK,G,CCjCH,SAAStB,EAAiBD,EAAM2B,GACrC,IAAMC,EAAYZ,EAAiBhB,EAAK6B,SACxCF,EAAcG,mBAAmB,YAAaF,E,CCFjC1B,SAASC,cAAc,QCAtC,IAAM4B,EAAU7B,SAASC,cAAc,U,+HCFvC,IAAM6B,EAAa9B,SAASC,cAAc,aAEpC8B,GADe/B,SAASC,cAAc,SACxBD,SAASC,cAAc,kBACrC+B,EAAShC,SAASC,cAAc,QACpBD,SAASC,cAAc,gBAEzC,SAASgC,EAAcC,GACrBJ,EAAWK,UAAUC,IAAI,Y,CAG3B,SAASC,EAAsBH,GACzBA,EAAEI,SAAWJ,EAAEK,eACjBT,EAAWK,UAAUC,IAAI,Y,CAK7B,SAASI,EAAYC,GACnBA,EAAEC,iBACFZ,EAAWK,UAAUQ,OAAO,aAE5BX,EAAOY,iBAAiB,WAExB,SAASC,EAAmBX,GACX,WAAXA,EAAEY,OACJhB,EAAWK,UAAUC,IAAI,aACzBJ,EAAOe,oBAAoB,UAAWF,G,IAKrC,SAASG,EAAQC,GACtBA,EAAIL,iBAAiB,QAASJ,GAC9BT,EAAYa,iBAAiB,QAASX,GACtCH,EAAWc,iBAAiB,QAASP,E,iBC7BvC,IAAMa,EAAelD,SAASC,cAAc,SAG1CV,IACAyD,EAAQE,GFJDrB,EAAQD,mBAAmB,YGJxB,oGCGZ,IAAMuB,EAAenD,SAASC,cAAc,wBAC5CL,QAAQC,IAAIsD,E","sources":["src/js/requests/fetchFilmsTrends.js","src/js/controls/trendsControl.js","src/js/requests/fetchGenreId.js","src/js/customFunction/getGenreName.js","src/js/markup/trendfilmsMarkup.js","src/js/render/filmsTrendRender.js","src/js/render/testRender.js","src/js/render/renderBtnModalFilm.js","src/js/modal/commonModalOpen.js","src/js/common.js","src/js/markup/markupBtnModalFilm.js","src/index.js"],"sourcesContent":["const BASEURL = 'https://api.themoviedb.org/3/trending/';\nconst keyApi = '894ef72300682f1db325dae2afe3e7e2';\n\nexport function fetchFilmsTrends(page, urlPart) {\n  return fetch(`${BASEURL}${urlPart}?api_key=${keyApi}&page=${page}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n","import { fetchFilmsTrends } from '../requests';\nimport { fetchGenreId } from '../requests';\nimport { filmsTrendRender } from '../render/filmsTrendRender';\nexport let genreIdArr = [];\nexport function trendsControls() {\n  let page = 1;\n\n  fetchGenreId()\n    .then(genreId => {\n      genreIdArr = genreId.genres;\n    })\n    .catch(error => console.log(error));\n  const uplPart = 'movie/week';\n  fetchFilmsTrends(page, uplPart).then(data => {\n    const destinationEl = document.querySelector('.films-gallery');\n    filmsTrendRender(data, destinationEl);\n  });\n} //это святое\n","export function fetchGenreId() {\n  return fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=894ef72300682f1db325dae2afe3e7e2&language=en-US'\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n}\n","import { genreIdArr } from '../controls/trendsControl';\n\nexport function getGenreName(genre_ids) {\n  let genreName = [];\n\n  genre_ids.forEach(genre_id => {\n    genreName.push(genreIdArr.find(genre => genre.id === genre_id).name);\n  });\n\n  if (genreName.length > 2) {\n    genreName = genreName.slice(0, 2);\n    genreName.push('Other');\n  }\n  return genreName;\n}\n","import { getGenreName } from '../customFunction/getGenreName';\n\nexport function createFilmMarkup(arrFilms) {\n  return arrFilms\n    .map(({ original_title, release_date, genre_ids, poster_path }) => {\n      let genres = getGenreName(genre_ids);\n\n      if (genres.length > 2) {\n        genres = genres.slice(0, 2);\n        genres.push('Other');\n      }\n      genres = genres.join(', ');\n\n      const date = new Date(release_date);\n      const yearRelease = date.getFullYear();\n      return `<div class=\"film-card\">\n      <div class=\"film-card__img-box\">\n        <a class=\"film-card__link link\" href=\"\">\n        <img class=\"film-card__img\"\n          src=\"https://www.themoviedb.org/t/p/w500/${poster_path}\"\n          alt=\"\"\n        />\n        </a></div>\n      \n        <div class=\"film-card__info\">\n          <h2 class=\"film-card__name film-card__item\">\n            ${original_title}\n          </h2>\n          <p class=\"film-card__data film-card__item\">\n            ${genres} | ${yearRelease}\n          </p>\n        </div>\n      \n    </div>`;\n    })\n    .join('');\n}\n","import { createFilmMarkup } from '../markup/trendfilmsMarkup';\n//const galleryEl = document.querySelector('.films-gallery');\nexport function filmsTrendRender(data, destinationEl) {\n  const imgMarkUp = createFilmMarkup(data.results);\n  destinationEl.insertAdjacentHTML('beforeend', imgMarkUp);\n}\n","import { markupTrending } from '../markup';\n\nconst mainEl = document.querySelector('main');\n\nexport function testRender(data) {\n  return data.results.map(item =>\n    mainEl.insertAdjacentHTML('beforeend', markupTrending(item.poster_path))\n  );\n}\n","import { markupBtnModalFilm } from '../markup';\n\nconst modalEl = document.querySelector('.modal');\n\nexport function renderBtnModalFilm(data) {\n  return modalEl.insertAdjacentHTML('beforeend', markupBtnModalFilm());\n}\n","const backdropEl = document.querySelector('.backdrop');\nconst buttonTestEl = document.querySelector('.test');\nconst buttonClose = document.querySelector('.modal-button');\nconst bodyEl = document.querySelector('body');\nconst footerBtn = document.querySelector('.footer__btn');\n\nfunction onClouseModal(e) {\n  backdropEl.classList.add('is-hidden');\n}\n\nfunction onClouseModalBackdrop(e) {\n  if (e.target === e.currentTarget) {\n    backdropEl.classList.add('is-hidden');\n  }\n  return;\n}\n\nfunction onOpenModal(e) {\n  e.preventDefault();\n  backdropEl.classList.remove('is-hidden');\n\n  bodyEl.addEventListener('keydown', creatKeydownEscape);\n\n  function creatKeydownEscape(e) {\n    if (e.code === 'Escape') {\n      backdropEl.classList.add('is-hidden');\n      bodyEl.removeEventListener('keydown', creatKeydownEscape);\n    }\n  }\n}\n\nexport function onClick(btn) {\n  btn.addEventListener('click', onOpenModal);\n  buttonClose.addEventListener('click', onClouseModal);\n  backdropEl.addEventListener('click', onClouseModalBackdrop);\n}\n","// import { fetchTrending } from './requests';\nimport { renderBtnModalFilm } from './render';\nimport { onClick } from './modal';\nimport { trendsControls } from './controls';\n\nconst buttonTestEl = document.querySelector('.test');\nexport function renderAll() {\n  // fetchTrending();\n  trendsControls();\n  onClick(buttonTestEl);\n  renderBtnModalFilm();\n}\n","export function markupBtnModalFilm() {\n    return `<button class=\"button\">add to Watched</button>\n    <button class=\"button\">add to queue</button>`;\n  }","import { renderAll } from './js/common.js';\n\nrenderAll();\n\nconst btnWatchedEl = document.querySelector('.header-btn__watched');\nconsole.log(btnWatchedEl);\n"],"names":["$43e97f4e0f3a43da$export$25311eb0e0625687","page","urlPart","fetch","concat","then","response","ok","Error","status","json","$04fd42e164da4557$export$88c94c87660d44ec","$04fd42e164da4557$export$35de0e194fa031c","genreId","genres","catch","error","console","log","data","$6efd800b6dc5a170$export$e034e57e3a7a732f","document","querySelector","$1ec551874a3bf7d9$export$e1e489d92e562b7b","genre_ids","genreName","forEach","genre_id","push","find","genre","id","name","length","slice","$1b097b81f356504c$export$34f980816dd5ca83","arrFilms","map","param","original_title","release_date","poster_path","join","yearRelease","Date","getFullYear","destinationEl","imgMarkUp","results","insertAdjacentHTML","$6c6a616148fd5a03$var$modalEl","$952a15c298e5f2e9$var$backdropEl","$952a15c298e5f2e9$var$buttonClose","$952a15c298e5f2e9$var$bodyEl","$952a15c298e5f2e9$var$onClouseModal","e","classList","add","$952a15c298e5f2e9$var$onClouseModalBackdrop","target","currentTarget","$952a15c298e5f2e9$var$onOpenModal","e1","preventDefault","remove","addEventListener","creatKeydownEscape","code","removeEventListener","$952a15c298e5f2e9$export$1d5a917feb871989","btn","$b7383fa2020d36b2$var$buttonTestEl","$b8f9b7833fa37166$var$btnWatchedEl"],"version":3,"file":"index.498b6001.js.map"}